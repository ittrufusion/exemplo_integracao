package com.ittru.fusion.example;

import java.io.InputStream;
import java.sql.SQLException;
import java.util.Date;

import com.crivano.swaggerservlet.PresentableException;
import com.crivano.swaggerservlet.SwaggerUtils;
import com.ittru.fusion.example.IIttruSystem.ISignRefGet;
import com.ittru.fusion.example.IIttruSystem.SignRefGetRequest;
import com.ittru.fusion.example.IIttruSystem.SignRefGetResponse;

public class SignRefGet implements ISignRefGet {

	@Override
	public void run(SignRefGetRequest req, SignRefGetResponse resp)
			throws Exception {
		if (!req.ref.equals("A01"))
			throw new PresentableException("NÃ£o implementado");

		resp.envelope = SwaggerUtils
				.base64Decode("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");
		resp.time = new Date(1483976138937L);
	}

	protected static byte[] retrieveSign(String ref) throws Exception,
			SQLException {
		InputStream is = SignRefGet.class.getResourceAsStream(ref + ".cms");
		byte[] ab = Utils.convertStreamToByteArray(is, 64 * 1024);
		return ab;
	}

	@Override
	public String getContext() {
		return "obter assinatura";
	}
}